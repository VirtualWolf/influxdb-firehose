[[outputs.influxdb_v2]]
    urls = ["http://influxdb:8086"]
    token = "${INFLUXDB_TOKEN}"
    organization = "${INFLUXDB_ORG}"
    namepass = ["air-quality"]
    namedrop = ["weather", "power"]
    bucket = "air-quality"

# I need to rename 'airquality' to 'air-quality' here because the original TypeScript application
# sent the data as 'air-quality' and not directly pulled from the topic name
[[processors.rename]]
    [[processors.rename.replace]]
        measurement = "airquality"
        dest = "air-quality"

# Takes an MQTT topic "home/<location>/air-quality" with the following JSON payload:
# {
#     "timestamp": 1658739651042,
#     "pm_1_0": 7,
#     "pm_2_5": 10,
#     "pm_10": 15,
#     "particles_0_3um": 1197,
#     "particles_0_5um": 347,
#     "particles_1_0um": 60,
#     "particles_2_5um": 12,
#     "particles_5_0um": 2,
#     "particles_10um": 0
# }
#
# And produces the following line protocol:
# air-quality,sensor=outdoor PM1.0=7,PM2.5=10,pm_10=15,Particles>0.3µm/0.1Lair=1197,\
# Particles>0.5µm/0.1Lair=347,Particles>1.0µm/0.1Lair=60,Particles>2.5µm/0.1Lair=12,\
# Particles>5.0µm/0.1Lair=2,Particles>10.0µm/0.1Lair=0 1658739651042000000

[[inputs.mqtt_consumer]]
    servers = ["${MQTT_BROKER_ADDRESS}"]
    client_id = "telegraf_air-quality"
    qos = 1
    persistent_session = true

    topics = ["home/+/airquality"]
    topic_tag = ""

    data_format = "json_v2"

    [[inputs.mqtt_consumer.topic_parsing]]
        topic = "home/+/airquality"
        # The "tags" field here was commented out because all of the existing data from
        # the original TypeScript application turns out to have no tags on it either and
        # I had wanted to be consistent, but now that I've got a separate indoor air
        # quality sensor it breaks the readings
        tags = "_/sensor/_"
        measurement = "_/_/measurement"

    [[inputs.mqtt_consumer.json_v2]]
        timestamp_path = "timestamp"
        timestamp_format = "unix_ms"

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "pm_1_0"
            type = "float"
            rename = "PM1.0"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "pm_2_5"
            type = "float"
            rename = "PM2.5"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "pm_10"
            type = "float"
            rename = "PM10"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_0_3um"
            type = "float"
            rename = "Particles>0.3µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_0_5um"
            type = "float"
            rename = "Particles>0.5µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_1_0um"
            type = "float"
            rename = "Particles>1.0µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_2_5um"
            type = "float"
            rename = "Particles>2.5µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_5_0um"
            type = "float"
            rename = "Particles>5.0µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "particles_10um"
            type = "float"
            rename = "Particles>10.0µm/0.1Lair"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "aqi"
            type = "float"
            rename = "air_quality_index"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "tvoc"
            type = "float"
            rename = "total_volatile_organic_compounds"
            optional = true

        [[inputs.mqtt_consumer.json_v2.field]]
            path = "eco2"
            type = "float"
            rename = "equivalent_co2"
            optional = true
